#! /bin/bash

: ${GOPATH:?"GOPATH is required"}
: ${GOROOT:?"GOROOT is required"}

BLEND_PUBLIC=${GOPATH}/src/github.com/blendlabs
BLEND_PRIVATE=${GOPATH}/src/git.blendlabs.com/blend

echo "blend public root: ${BLEND_PUBLIC}"
echo "blend private root: ${BLEND_PRIVATE}"

if [ ! -d "${BLEND_PUBLIC}" ]; then
    echo "creating: ${BLEND_PUBLIC}"
    mkdir -p ${BLEND_PUBLIC}
fi

if [ ! -d "${BLEND_PRIVATE}" ]; then
    echo "creating: ${BLEND_PRIVATE}"
    mkdir -p ${BLEND_PRIVATE}
fi

################################################################################
# PUBLIC PACKAGES
################################################################################

# go-assert
PROJECT_ROOT=${BLEND_PUBLIC}/go-assert
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-assert --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-chronometer
PROJECT_ROOT=${BLEND_PUBLIC}/go-chronometer
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-chronometer --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-exception
PROJECT_ROOT=${BLEND_PUBLIC}/go-exception
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-exception --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-logger
PROJECT_ROOT=${BLEND_PUBLIC}/go-logger
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-logger --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-name-parser
PROJECT_ROOT=${BLEND_PUBLIC}/go-name-parser
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-name-parser --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-request
PROJECT_ROOT=${BLEND_PUBLIC}/go-request
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-request --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-util
PROJECT_ROOT=${BLEND_PUBLIC}/go-util
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-util --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-web
PROJECT_ROOT=${BLEND_PUBLIC}/go-web
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-web --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi

# go-workqueue
PROJECT_ROOT=${BLEND_PUBLIC}/go-workqueue
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/go-workqueue --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# spiffy
PROJECT_ROOT=${BLEND_PUBLIC}/spiffy
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@github.com:blendlabs/spiffy --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

################################################################################
# PUBLIC PACKAGES
################################################################################

# go-common
PROJECT_ROOT=${BLEND_PRIVATE}/go-common
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@git.blendlabs.com:blend/go-common --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git pull --ff-only --quiet;
fi
popd &> /dev/null;

# go-common
PROJECT_ROOT=${BLEND_PRIVATE}/genv
if [ ! -d ${PROJECT_ROOT} ]; then
    echo "cloning: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT} &> /dev/null;
    git clone git@git.blendlabs.com:blend/genv --quiet;
else 
    echo "fetching: ${PROJECT_ROOT}"
    pushd ${PROJECT_ROOT}  &> /dev/null;
    git pull --ff-only --quiet;
fi
go get -u git.blendlabs.com/blend/genv;
popd &> /dev/null;