set shell=/bin/bash

call pathogen#infect()
call pathogen#helptags()

"basic formatting {         
    set cursorline
    set backspace=indent,eol,start
    set showmatch
    set mouse=a
    set number
    set nowrap
    set hlsearch
	
	set timeoutlen=0 ttimeoutlen=0

    syntax on                           " Enable syntax highlighting
    filetype on                         " enable filetype specific plugins
    filetype plugin indent on
    set autoindent   
 
    let g:Powerline_symbols = 'fancy'
    set laststatus=2    " always show powerline statusline
    set encoding=utf-8  " necessary to show unicode glyphs

    set sw=4
    set ts=4

    set clipboard=unnamed

    " Store temporary files in a central spot
    set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
    set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
"}

"neovim {
	let g:acp_enableAtStartup = 0
	let g:neocomplete#enable_at_startup = 1
	let g:neocomplete#enable_smart_case = 1
	let g:neocomplete#sources#syntax#min_keyword_length = 3

	inoremap <expr><C-l>     neocomplete#complete_common_string()
	inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
	function! s:my_cr_function()
    	return neocomplete#close_popup() . "\<CR>"
	endfunction
	inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
	inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
	inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
	inoremap <expr><C-y> neocomplete#close_popup()
	inoremap <expr><C-e> neocomplete#cancel_popup()
"}

"go specific stuff{
	let g:go_fmt_command = "goimports"
"}


"custom maps {
    nmap <S-Tab> <<
    imap <S-Tab> <Esc><<i

    nmap <C-a> ^
    nmap <C-e> $

    imap <C-a> <Esc>^i
    imap <C-e> <Esc>$i

    imap <C-Return> <CR><CR><C-o>k<TAB>

    noremap <F4> :pclose<CR>
    noremap <F3> :set hlsearch!<CR>
"}

"nerdtree {
nnoremap <C-h> :NERDTreeToggle<cr>
"}

"ctrl-p {
set runtimepath^=~/.vim/bundle/ctrlp.vim
"}

"go settings {
let g:go_fmt_command = "goimports"
"}

"register settings {
nnoremap  y "*y
nnoremap  Y "*Y
nnoremap  p "*p
nnoremap  P "*P
vnoremap y "*y
vnoremap Y "*Y
vnoremap p "*p
vnoremap P "*P
"}
